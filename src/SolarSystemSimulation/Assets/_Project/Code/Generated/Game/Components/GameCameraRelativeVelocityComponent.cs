//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCameraRelativeVelocity;

    public static Entitas.IMatcher<GameEntity> CameraRelativeVelocity {
        get {
            if (_matcherCameraRelativeVelocity == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CameraRelativeVelocity);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCameraRelativeVelocity = matcher;
            }

            return _matcherCameraRelativeVelocity;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SolarSystem.Gameplay.Spaceship.CameraRelativeVelocity cameraRelativeVelocity { get { return (SolarSystem.Gameplay.Spaceship.CameraRelativeVelocity)GetComponent(GameComponentsLookup.CameraRelativeVelocity); } }
    public UnityEngine.Vector3 CameraRelativeVelocity { get { return cameraRelativeVelocity.Value; } }
    public bool hasCameraRelativeVelocity { get { return HasComponent(GameComponentsLookup.CameraRelativeVelocity); } }

    public GameEntity AddCameraRelativeVelocity(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.CameraRelativeVelocity;
        var component = (SolarSystem.Gameplay.Spaceship.CameraRelativeVelocity)CreateComponent(index, typeof(SolarSystem.Gameplay.Spaceship.CameraRelativeVelocity));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceCameraRelativeVelocity(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.CameraRelativeVelocity;
        var component = (SolarSystem.Gameplay.Spaceship.CameraRelativeVelocity)CreateComponent(index, typeof(SolarSystem.Gameplay.Spaceship.CameraRelativeVelocity));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveCameraRelativeVelocity() {
        RemoveComponent(GameComponentsLookup.CameraRelativeVelocity);
        return this;
    }
}
